if not init then
    menuscreen = 1
    gamescreen = 0
    loadgame = 1
    gameover = 0
    difficulty = 1
    wallcollide = 1
    
    controls = {}
    for ix1=1,6 do
        controls[ix1] = 0
    end
    
    player = {}
    for ix1=1,4 do
        -- 1=xpos,2=ypos,3=lives,4=score,5=shield,6=health,7=rotation,8=forwardvelocity
        player[ix1] = 0
    end
    player[1] = 500
    player[2] = 500
    player[3] = 3
    player[4] = 0
    player[5] = 100
    player[6] = 100
    player[7] = 0
    player[8] = 0
    playershowshield = 0
    playershowdamage = 0
    playermaxspeed = 5
    
    playerprojectile = {}
    playermaxprojectiles = 10
    playerprojectilespeed = 10
    for ix1=1,playermaxprojectiles do
        playerprojectile[ix1] = {}
        for iy1=1,5 do
            -- 1=xpos,2=ypos,3=alivestate,4=xvec,5=yvec
            playerprojectile[ix1][iy1] = 0
        end
    end
    
    enemyspeed = 10
    enemiesremaining = 0
    maxenemies = 20
    enemies = {}
    for ix1=1,maxenemies do
        enemies[ix1] = {}
        for iy1=1,5 do
            enemies[ix1][iy1] = 0
        end
    end
    --enemies[#][X] where x = 1 = xpos, 2 = ypos, 3 = alivestate, 4 = xvector, 5 = yvector
    
    maxenemyprojectiles = maxenemies
    enemyprojectilespeed = 5
    enemyprojectiles = {}
    for ix1=1,maxenemyprojectiles do
        enemyprojectiles[ix1] = {}
        for iy1=1,5 do
            enemyprojectiles[ix1][iy1] = 0
        end
    end
    --enemyprojectiles[#][X] where x = 1 = xpos, 2 = ypos, 3 = alivestate, 4 = xvec, 5 = yvec
     
    colors = {}
    for ix1=1,6 do
        colors[ix1] = {}
        for iy1=1,3 do
            colors[ix1][iy1] = math.random(255)/255
        end
    end
    colors[1][1] = 2
    colors[1][2] = 2
    colors[1][3] = 2
    colors[2][1] = 0
    colors[2][2] = 0
    colors[2][3] = 0
    colors[3][1] = 1.2
    colors[3][2] = 1.2
    colors[3][3] = 0
    --colors[] 1=enemy outline, 2=enemy fill, 3=projectile, 4=, 5=, 6=
    
    highscores = {}
    for bb1=1,10 do
        highscores[bb1] = {}
        for bv1=1,2 do
            highscores[bb1][bv1] = ""
        end
    end
    
    images = {}
    for ig1=1,2 do
        images[ig1] = ""
    end
    images[1] = "assets.prod.novaquark.com/66839/23968750-1ea6-47cb-a1b1-e665cf6d03fd.png"
    images[2] = ""
    
    init = true
end
font1 = loadFont("Montserrat-Light", 15)
layer1 = createLayer()
layer2 = createLayer()
rx, ry = getResolution()
cx, cy = getCursor()
cd = getCursorDown()
cp = getCursorPressed()
cr = getCursorReleased()
scriptoutput = ""

local inputstr = getInput()
if inputstr == nil or inputstr == "" then
    --do nothing
else
    local inputstr2 = string.sub(inputstr,1,9)
    if inputstr2 == "HIGHSCORE" then
        logMessage(inputstr)
        if string.len(inputstr) > 13 then
            inputstr2 = string.sub(inputstr,10,string.find(inputstr,":") - 1)
            inputstr = string.sub(inputstr,string.find(inputstr,":")+1,string.len(inputstr))
            highscores[tonumber(inputstr2)][1] = string.sub(inputstr,1,string.find(inputstr,":")-1)
            highscores[tonumber(inputstr2)][2] = string.sub(inputstr,string.find(inputstr,":")+1,string.len(inputstr))
        end
    else
        for iy0=1,6 do
            inputstr2 = string.sub(inputstr,1,string.find(inputstr,",") - 1)
            inputstr = string.sub(inputstr,string.find(inputstr,",")+1,string.len(inputstr))
            controls[iy0] = tonumber(inputstr2)
        end
    end
end

function DrawButton(drawlayer, btnx, btny, btnw, btnh, btntxt, callfunc)
    setNextFillColor(drawlayer, 0.35, 0.35, 0.35, 1)
    if cx > btnx and cx < (btnx+btnw) then
        if cy > btny and cy < (btny+btnh) then
            if getCursorReleased() == true then
                --clicked
                setNextFillColor(drawlayer, 1, 0, 0, 1)
                callfunc()
            else
                --hovered
                setNextFillColor(drawlayer, 1, 1, 0, 1)
            end
        end
    end
    setNextStrokeWidth(drawlayer, 0)
    addBoxRounded(drawlayer, btnx, btny, btnw, btnh, 5)
    setNextFillColor(drawlayer, 1, 1, 1, 1)
    local txtw, txty = getTextBounds(font1,btntxt)
    addText(drawlayer, font1, btntxt, btnx + ((btnw - txtw)/2), btny + (btnh/2)+(txty/2))
end

function DrawHealthBar(drawlayer, btnx, btny, btnw, btnh, value)
    setNextFillColor(drawlayer, 0.35, 0.35, 0.35, 1)
    setNextStrokeWidth(drawlayer, 0)
    addBox(drawlayer, btnx, btny, btnw, btnh)
    setNextFillColor(drawlayer, 0.85, 0.15, 0.15, 1)
    setNextStrokeWidth(drawlayer, 0)
    addBox(drawlayer, btnx, btny, btnw*(value/100), btnh)
    addText(drawlayer,font1,value,btnx+btnw+15,btny+15)
end

function DrawShieldBar(drawlayer, btnx, btny, btnw, btnh, value)
    setNextFillColor(drawlayer, 0.35, 0.35, 0.35, 1)
    setNextStrokeWidth(drawlayer, 0)
    addBox(drawlayer, btnx, btny, btnw, btnh)
    setNextFillColor(drawlayer, 0.15, 0.45, 0.85, 1)
    setNextStrokeWidth(drawlayer, 0)
    addBox(drawlayer, btnx, btny, btnw*(value/100), btnh)
    addText(drawlayer,font1,value,btnx+btnw+15,btny+15)
end

function drawTargetCursor(drawlayer)
    local lclcx, lclcy, lclcd = cx, cy, cd
    if lclcd == true then
        setNextStrokeColor(drawlayer,1,0,0,1)
    else
        setNextStrokeColor(drawlayer,0.75,0.75,0.75,0.5)
    end
    setNextFillColor(drawlayer,0,0,0,0)
    setNextStrokeWidth(drawlayer, 3)
    addCircle(drawlayer, lclcx, lclcy, 10)
    if lclcd == true then
        setNextStrokeColor(drawlayer,1,0,0,1)
    else
        setNextStrokeColor(drawlayer,0.75,0.75,0.75,0.5)
    end
    setNextFillColor(drawlayer,0,0,0,0)
    setNextStrokeWidth(drawlayer, 3)
    addCircle(drawlayer, lclcx, lclcy, 20)
end

function drawPlayer(drawlayer)
    local lclplayer = player
    local tx1, ty1, tx2, ty2, tx3, ty3 = lclplayer[1]+16, lclplayer[2]+8, lclplayer[1]-12, lclplayer[2], lclplayer[1]+16, lclplayer[2]-8
    local cax, cay = math.cos(lclplayer[7]), math.sin(lclplayer[7])
    tx1 = tx1 - lclplayer[1]
    ty1 = ty1 - lclplayer[2]
    tx2 = tx2 - lclplayer[1]
    ty2 = ty2 - lclplayer[2]
    tx3 = tx3 - lclplayer[1]
    ty3 = ty3 - lclplayer[2]
    local xnew = tx1 * cay - ty1 * cax
    local ynew = tx1 * cax + ty1 * cay
    tx1 = xnew + lclplayer[1]
    ty1 = ynew + lclplayer[2]
    xnew = tx2 * cay - ty2 * cax
    ynew = tx2 * cax + ty2 * cay
    tx2 = xnew + lclplayer[1]
    ty2 = ynew + lclplayer[2]
    xnew = tx3 * cay - ty3 * cax
    ynew = tx3 * cax + ty3 * cay
    tx3 = xnew + lclplayer[1]
    ty3 = ynew + lclplayer[2]
    setNextFillColor(drawlayer, 0.75, 0.75, 0.75, 1)
    addTriangle(drawlayer, tx1, ty1, tx2, ty2, tx3, ty3)
    --if controls[2] == 1 then
    --    setNextFillColor(drawlayer, 2, 0.75, 0, 1)
    --    addBox(drawlayer, lclplayer[1] - 5, lclplayer[2] + 12, 6, 5)
    --end
    if playershowshield == 1 then
        setNextFillColor(drawlayer,0,0.35,1,0.5)
        addCircle(drawlayer,lclplayer[1]-2,lclplayer[2]+2,18)
        playershowshield = 0
    end
    if playershowdamage == 1 then
        setNextFillColor(drawlayer,1,0.4,0,0.5)
        addCircle(drawlayer,lclplayer[1]-2,lclplayer[2]+2,18)
        playershowdamage = 0
    end
end

function updatePlayerPosition()
    local lclplyr = player
    if lclplyr[1] < (rx - 10) and lclplyr[1] > 10 then
        if lclplyr[8] > 0 then
            local newxpos = math.sin(lclplyr[7])
            lclplyr[1] = lclplyr[1]-(lclplyr[8]*(newxpos * 2))
            lclplyr[8] = lclplyr[8] - 0.025
        end
        if lclplyr[8] < 0 then
            local newxpos = math.sin(lclplyr[7])
            lclplyr[1] = lclplyr[1]-(lclplyr[8]*(newxpos * 2))
            lclplyr[8] = lclplyr[8] + 0.025
        end
    else
        if lclplyr[1] > (rx - 10) then lclplyr[1] = (rx - 11) end
        if lclplyr[1] < 10 then lclplyr[1] = 11 end
    end
    if lclplyr[2] < (ry - 10) and lclplyr[2] > 10 then
        if lclplyr[8] > 0 then
            local newypos = math.cos(lclplyr[7])
            lclplyr[2] = lclplyr[2]-(lclplyr[8]*(newypos * 2))
            lclplyr[8] = lclplyr[8] - 0.025
        end
        if lclplyr[8] < 0 then
            local newypos = math.cos(lclplyr[7])
            lclplyr[2] = lclplyr[2]-(lclplyr[8]*(newypos * 2))
            lclplyr[8] = lclplyr[8] + 0.025
        end
    else
        if lclplyr[2] > (ry - 10) then lclplyr[2] = (ry - 11) end
        if lclplyr[2] < 10 then lclplyr[2] = 11 end
    end
end

function drawPlayerProjectile(drawlayer)
    local lclplyrpjctl = playerprojectile
    for prjctl=1,playermaxprojectiles do
        if lclplyrpjctl[prjctl][3] == 1 then
            setNextFillColor(drawlayer, colors[3][1], colors[3][2], colors[3][3], 1)
            addBox(drawlayer, lclplyrpjctl[prjctl][1]-2, lclplyrpjctl[prjctl][2]-3, 3, 5)
        end
    end
end

function updatePlayerProjectile()
    local lclenemys = enemies
    local lclplyrpjctl = playerprojectile
    local lclplayer = player
    for prjtl=1,playermaxprojectiles do
        if lclplyrpjctl[prjtl][3] == 1 then
            if lclplyrpjctl[prjtl][2] > 0 and lclplyrpjctl[prjtl][2] < ry then
                if lclplyrpjctl[prjtl][1] > 0 and lclplyrpjctl[prjtl][1] < rx then
                    if (math.abs(lclplyrpjctl[prjtl][4])+math.abs(lclplyrpjctl[prjtl][5])) < 0.5 then
                        lclplyrpjctl[prjtl][3] = 0
                    else
                        for ix1=1,maxenemies do
                            if lclenemys[ix1][3] == 1 then
                                local distx = math.abs(lclplyrpjctl[prjtl][1] - lclenemys[ix1][1])
                                local disty = math.abs(lclplyrpjctl[prjtl][2] - lclenemys[ix1][2])
                                if (distx < 18) and (disty < 18) then
                                    lclenemys[ix1][3] = 2
                                    lclplyrpjctl[prjtl][3] = 0
                                    lclplayer[4] = lclplayer[4] + 300
                                end
                            end
                        end
                        lclplyrpjctl[prjtl][1] = lclplyrpjctl[prjtl][1] + (playerprojectilespeed*lclplyrpjctl[prjtl][4])
                        lclplyrpjctl[prjtl][2] = lclplyrpjctl[prjtl][2] + (playerprojectilespeed*lclplyrpjctl[prjtl][5])
                    end
                else
                    lclplyrpjctl[prjtl][3] = 0
                end
            else
                lclplyrpjctl[prjtl][3] = 0
            end
            drawPlayerProjectile(layer1)
        end
    end
end

function damagePlayer(damage)
    local lclplayer = player
    if lclplayer[5] > damage then
        lclplayer[5] = lclplayer[5] - damage
        playershowshield = 1
    else
        local absorbeddmg = damage - lclplayer[5]
        lclplayer[5] = 0
        if lclplayer[6] > absorbeddmg then
            lclplayer[6] = lclplayer[6] - absorbeddmg
            playershowdamage = 1
        else
            gameover = 1
            scriptoutput = "NEWSCORE:"..player[4]
        end
    end
end

function updateEnemyProjectiles()
    local lclenemys = enemies
    local lclenemypjctls = enemyprojectiles
    local lclplayer = player
    for ix1=1,maxenemyprojectiles do
        if lclenemypjctls[ix1][3] == 1 then
            --check velo, if too low kill
            if (math.abs(lclenemypjctls[ix1][4])+math.abs(lclenemypjctls[ix1][5])) < 0.5 then
                lclenemypjctls[ix1][3] = 0
            end
            local distx = math.abs(lclenemypjctls[ix1][1] - lclplayer[1])
            local disty = math.abs(lclenemypjctls[ix1][2] - lclplayer[2])
            if (distx < 8) and (disty < 8) then
                lclenemypjctls[ix1][3] = 0
                damagePlayer(5)
            end
            if lclenemypjctls[ix1][2] < ry and lclenemypjctls[ix1][2] > 0 then
                if lclenemypjctls[ix1][1] < rx and lclenemypjctls[ix1][1] > 0 then
                    lclenemypjctls[ix1][1] = lclenemypjctls[ix1][1] + (enemyprojectilespeed*lclenemypjctls[ix1][4])
                    lclenemypjctls[ix1][2] = lclenemypjctls[ix1][2] + (enemyprojectilespeed*lclenemypjctls[ix1][5])
                else
                    lclenemypjctls[ix1][3] = 0
                end
            else
                lclenemypjctls[ix1][3] = 0
            end
            drawEnemyProjectile(layer1,lclenemypjctls[ix1][1],lclenemypjctls[ix1][2])
        else
            if lclenemys[ix1][3] == 1 then
                local firechance = math.random(1,50)
                if firechance == 1 then
                    lclenemypjctls[ix1][1] = lclenemys[ix1][1]
                    lclenemypjctls[ix1][2] = lclenemys[ix1][2]
                    lclenemypjctls[ix1][3] = 1
                    lclenemypjctls[ix1][4] = ((((lclenemys[ix1][1] - player[1])/20)*0.01)*(enemyprojectilespeed))*-1
                    lclenemypjctls[ix1][5] = ((((lclenemys[ix1][2] - player[2])/20)*0.01)*(enemyprojectilespeed))*-1
                    
                end
            end
        end
    end
end

function drawEnemies(drawlayer)
    local lclenemys = enemies
    for ix1=1,maxenemies do
        if lclenemys[ix1][3] == 1 then
            setNextFillColor(drawlayer, colors[1][1], colors[1][2], colors[1][3], 1)
            addBox(drawlayer, lclenemys[ix1][1]-10, lclenemys[ix1][2]-10, 10, 10)
            setNextFillColor(drawlayer, colors[2][1], colors[2][2], colors[2][3], 1)
            addBox(drawlayer, lclenemys[ix1][1]-8, lclenemys[ix1][2]-8, 8, 8)
        else
            if lclenemys[ix1][3] > 1 and lclenemys[ix1][3] < 9 then
                setNextStrokeColor(drawlayer, 1.1, 0.75, 0, 1)
                setNextFillColor(drawlayer, 0, 0, 0, 0)
                setNextStrokeWidth(drawlayer,3)
                addCircle(drawlayer,lclenemys[ix1][1],lclenemys[ix1][2],lclenemys[ix1][3]*4)
                setNextStrokeColor(drawlayer, 1.1, 0.55, 0, 1)
                setNextFillColor(drawlayer, 0, 0, 0, 0)
                setNextStrokeWidth(drawlayer,3)
                addCircle(drawlayer,lclenemys[ix1][1],lclenemys[ix1][2],lclenemys[ix1][3]*2)
                lclenemys[ix1][3] = lclenemys[ix1][3] + 1
            else
                lclenemys[ix1][3] = 0
            end
        end
    end
end

function drawEnemyProjectile(drawlayer, xpos, ypos)
    setNextFillColor(drawlayer, colors[3][1], colors[3][2], colors[3][3], 1)
    addBox(drawlayer, xpos - 1, ypos - 2, 3, 5)
end

function updateEnemyPositions()
    local lclenemys = enemies
    enemiesremaining = 0
    for ix1=1,maxenemies do
        if lclenemys[ix1][3] == 1 then
            --update vectors
            if wallcollide == 1 then
                if lclenemys[ix1][1] < 25 then
                    --enemy is left, move right
                    local sharedspeed = (math.random(1,2)-1)*enemyspeed
                    lclenemys[ix1][4] = (enemyspeed - sharedspeed)/enemyspeed
                end
                if lclenemys[ix1][1] > rx - 25 then
                    --enemy is right, move left
                    local sharedspeed = (math.random(1,2)-1)*enemyspeed
                    lclenemys[ix1][4] = -(enemyspeed - sharedspeed)/enemyspeed
                end
                if lclenemys[ix1][2] < 25 then
                    --enemy is up, move down
                    local sharedspeed = (math.random(1,2)-1)*enemyspeed
                    lclenemys[ix1][5] = (enemyspeed - sharedspeed)/enemyspeed
                end
                if lclenemys[ix1][2] > ry - 25 then
                    --enemy is down, move up
                    local sharedspeed = (math.random(1,2)-1)*enemyspeed
                    lclenemys[ix1][5] = -(enemyspeed - sharedspeed)/enemyspeed
                end
                enemiesremaining = enemiesremaining + 1
                lclenemys[ix1][1] = lclenemys[ix1][1] + (enemyspeed * lclenemys[ix1][4])
                lclenemys[ix1][2] = lclenemys[ix1][2] + (enemyspeed * lclenemys[ix1][5])
            else
                enemiesremaining = enemiesremaining + 1
                lclenemys[ix1][1] = lclenemys[ix1][1] + (enemyspeed * lclenemys[ix1][4])
                lclenemys[ix1][2] = lclenemys[ix1][2] + (enemyspeed * lclenemys[ix1][5])
                if lclenemys[ix1][1] > rx or lclenemys[ix1][1] < 0 then
                    lclenemys[ix1][3] = 0
                end
                if lclenemys[ix1][2] > ry or lclenemys[ix1][2] < 0 then
                    lclenemys[ix1][3] = 0
                end
            end
        end
    end
end

function recalcDifficulty(difflevel)
    difficulty = difflevel
    enemyspeed = 5 + (difficulty*0.2)
    maxenemies = 20 + difficulty
    maxenemyprojectiles = maxenemies
    enemyprojectilespeed = 5 + (difficulty*0.2)
    enemies = {}
    for ix1=1,maxenemies do
        enemies[ix1] = {}
        for iy1=1,5 do
            enemies[ix1][iy1] = 0
        end
    end
    enemyprojectiles = {}
    for ix1=1,maxenemyprojectiles do
        enemyprojectiles[ix1] = {}
        for iy1=1,5 do
            enemyprojectiles[ix1][iy1] = 0
        end
    end
    loadgame = 1
end

function handleGameplayInputs()
    if controls[2] == 1 then
        --forward
        if math.abs(player[8]) < playermaxspeed then
            player[8] = player[8] + 0.1
        end
    end
    if controls[3] == 1 then
        --backward
        if math.abs(player[8]) < playermaxspeed then
            player[8] = player[8] - 0.1
        end
    end
    if controls[4] == 1 then
        --left
        player[7] = player[7] + 0.1
    end
    if controls[5] == 1 then
        --right
        player[7] = player[7] - 0.1
    end
    if controls[6] == 1 then
        --swap weapon
        recalcDifficulty(difficulty+1)
    end
    if cd == true then
        --fire control
        if cx ~= -1 and cy ~= -1 then
            local newplayerprojectile = 0
            for prjctlselect=1,playermaxprojectiles do
                if newplayerprojectile == 0 then
                    if playerprojectile[prjctlselect][3] == 0 then
                        newplayerprojectile = prjctlselect
                    end
                end
            end
            if newplayerprojectile ~= 0 then
                playerprojectile[newplayerprojectile][3] = 1 --make it live
                playerprojectile[newplayerprojectile][1] = player[1]
                playerprojectile[newplayerprojectile][2] = player[2]
                playerprojectile[newplayerprojectile][4] = (((cx - player[1])/20)*0.01)*(playerprojectilespeed)
                playerprojectile[newplayerprojectile][5] = (((cy - player[2])/20)*0.01)*(playerprojectilespeed)
            end
        end
    end
end

if controls[1] == 1 then
    --if controller is active
    if menuscreen == 1 then
        local titleimage = loadImage(images[1])
        font2 = loadFont("Play-Bold",75)
        font1 = loadFont("Play",25)
        addImage(layer1,titleimage,0,0,rx,ry)
        setNextShadow(layer1,15,0,0,0,1)
        setNextFillColor(layer1,1,0.8,0,1)
        addText(layer1,font2,"UNIVERSE INVADERS",150,150)
        output = function() menuscreen = 0 end
        DrawButton(layer2, 385, 210, 225, 135, "PLAY", output)
    else
        if gameover == 1 then
            for ix1=1,9 do
                scriptoutput = "GETSCORES"
                addText(layer1,font1,"#"..ix1..": "..highscores[ix1][1].." - "..highscores[ix1][2],300,50*ix1)
            end
        else
            if loadgame == 1 then
                for ix1=1,maxenemies do
                    enemies[ix1][1] = math.random(20,rx - 15)
                    enemies[ix1][2] = math.random(20,ry - 50)
                    enemies[ix1][3] = 1
                    local sharedspeed = (math.random(1,2)-1)*enemyspeed
                    local neg = math.random(1,2)
                    if neg == 1 then
                        enemies[ix1][4] = (enemyspeed - sharedspeed)/enemyspeed
                    else
                        enemies[ix1][4] = -(enemyspeed - sharedspeed)/enemyspeed
                    end
                    local neg2 = math.random(1,2)
                    if neg2 == 1 then
                        enemies[ix1][5] = (enemyspeed - sharedspeed)/enemyspeed
                    else
                        enemies[ix1][5] = -(enemyspeed - sharedspeed)/enemyspeed
                    end
                end
                loadgame = 0
            end
            handleGameplayInputs()
            updatePlayerPosition()
            updatePlayerProjectile()
            updateEnemyPositions()
            updateEnemyProjectiles()
            drawEnemies(layer1)
            drawPlayer(layer1)
            drawTargetCursor(layer2)

            --lights reflect health status
            local tempr = 0.75
            local tempg = 1*(player[6]/100)
            local tempb = 1*(player[5]/100)
            scriptoutput = "LIGHT:"..tempr..":"..tempg..":"..tempb..""

            output = function() scriptoutput = "NEWSCORE:"..player[4] end
            DrawButton(layer2, 885, 10, 125, 35, "Confirm Score", output)

            output = function() gameover = 1 scriptoutput = "GETSCORES" end
            DrawButton(layer2, 885, 110, 125, 35, "View Scores", output)

            DrawHealthBar(layer2, 25, 25, 200, 15, player[6])
            DrawShieldBar(layer2, 25, 50, 200, 15, player[5])
            setNextFillColor(layer2,2,2,2,1)
            addText(layer2,font1,"SCORE: " .. player[4],25,85)
            setNextFillColor(layer2,2,2,2,1)
            addText(layer2,font1,"Enemies: " .. enemiesremaining,25,110)

            setOutput(scriptoutput)
        end
    end
else
    local titleimage = loadImage(images[1])
    font2 = loadFont("Play-Bold",75)
    font1 = loadFont("Play",25)
    addImage(layer1,titleimage,0,0,rx,ry)
    setNextShadow(layer1,15,0,0,0,1)
    setNextFillColor(layer1,1,0.8,0,1)
    addText(layer1,font2,"UNIVERSE INVADERS",150,150)
    
    setNextShadow(layer1,15,0,0,0,1)
    setNextFillColor(layer1,0,0,0,0.7)
    addBoxRounded(layer1,25,345,rx - 50,125,15)
    
    setNextShadow(layer1,5,0,0,0,1)
    setNextFillColor(layer1,1,0.6,0,1)
    addText(layer1,font1,"Activate the Remote Controller to start the machine.",225,400)
    setNextShadow(layer1,5,0,0,0,1)
    setNextFillColor(layer1,1,0,0,1)
    addText(layer1,font1,"You will be frozen in place while the controller is active. Deactivate it to move around.",25,435)
end

requestAnimationFrame(1)