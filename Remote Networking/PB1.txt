{"slots":{"0":{"name":"SysData","type":{"events":[],"methods":[]}},"1":{"name":"Emitter","type":{"events":[],"methods":[]}},"2":{"name":"Receiver","type":{"events":[],"methods":[]}},"3":{"name":"StateSwitch","type":{"events":[],"methods":[]}},"4":{"name":"ActivationEmitter","type":{"events":[],"methods":[]}},"5":{"name":"Screen","type":{"events":[],"methods":[]}},"6":{"name":"External","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"local messagereceived = message\n--system.print(message)\nif ConnectionSuccessful == 0 then\n    if string.sub(messagereceived,1,11) == \"WHOIS:LOCAL\" then\n        local sender = string.sub(messagereceived,13,string.len(messagereceived))\n        if DeviceTag ~= sender then\n            Emitter.send(\"0\",\"IAM:\"..DeviceTag)\n        end\n    end\n    if string.sub(messagereceived,1,4) == \"IAM:\" then\n        local responseid = string.sub(messagereceived,5,string.len(messagereceived))\n        local tmpidx = 1\n        local found = 0\n        local firstempty = 0\n        while(tmpidx < 33)\n        do\n            if nearbysystems[tmpidx] ~= nil and nearbysystems[tmpidx] ~= \"\" then\n                if responseid == nearbysystems[tmpidx] then\n                    found = 1\n                end\n            else\n                firstempty = tmpidx\n            end\n            tmpidx = tmpidx + 1\n        end\n        if found == 0 then\n            nearbysystems[firstempty] = responseid\n        end\n        SceenUpdate = 1\n    end\n    if string.find(messagereceived,\"CONNECT:\") == 1 then\n        if string.find(messagereceived,\" SEEK \") ~= nil then\n            StrSubLoc1 = string.find(messagereceived,\"CONNECT:\")\n            StrSubLoc2 = string.find(messagereceived,\" SEEK \")\n            PeerID = string.sub(messagereceived,StrSubLoc1+8,StrSubLoc2 -1)\n            CheckID = string.sub(messagereceived,StrSubLoc2+6)\n            --Check that we are not attempting to connect to ourself\n            if string.find(messagereceived,\"CONNECT:\" .. DeviceTag .. \" SEEK \" .. DeviceTag) ~= 1 then\n                if CheckID ~= DeviceTag then --if our ID was not the one polled, do nothing\n                    --do nothing\n                else\n                    --whitelisting logic here\n                    if WhitelistOnly == 1 then\n                        ConnectedPeer = PeerID\n                        Emitter.send(\"0\",\"CONNECT:\" .. DeviceTag .. \" ACK \" .. ConnectedPeer)\n                        ConnectionSuccessful = 1 \n                    else\n                        ConnectedPeer = PeerID\n                        Emitter.send(\"0\",\"CONNECT:\" .. DeviceTag .. \" ACK \" .. ConnectedPeer)\n                        ConnectionSuccessful = 1 \n                    end\n                end\n            end\n        end\n        if string.find(messagereceived,\" ACK \" .. DeviceTag) ~= nil then\n            StrSubLoc1 = string.find(messagereceived,\"CONNECT:\")\n            StrSubLoc2 = string.find(messagereceived,\" ACK \")\n            PeerID = string.sub(messagereceived,StrSubLoc1+8,StrSubLoc2 -1)\n            CheckID = string.sub(messagereceived,StrSubLoc2+5)\n            ConnectedPeer = PeerID\n            --system.print(\"Connection sucessfully established with: \" .. ConnectedPeer)\n            ScreenOutputAssem = \"CONNECTED:\" .. ConnectedPeer\n            ConnectionSuccessful = 1\n        end\n    end\nelse\n    if string.sub(messagereceived,1,9) == \"DATAREAD:\" then\n        StrSubLoc1 = string.sub(messagereceived,10,string.len(ConnectedPeer)+9)\n        StrSubLoc2 = string.find(messagereceived,\" TO \")\n        PeerID = StrSubLoc1\n        CheckID = string.sub(messagereceived,StrSubLoc2+4,string.len(DeviceTag)+StrSubLoc2+3)\n        if CheckID == DeviceTag and PeerID == ConnectedPeer then\n            local keyreq = string.sub(messagereceived,StrSubLoc2+5+string.len(DeviceTag),string.len(messagereceived))\n            if SysData.hasKey(keyreq) == 1 then\n                local returnvalue = SysData.getStringValue(keyreq)\n                Emitter.send(\"0\",\"DATARET:\" .. DeviceTag .. \" ACK \" .. ConnectedPeer .. \":\".. keyreq .. \":\" .. returnvalue)\n            else\n                Emitter.send(\"0\",\"DATARET:\" .. DeviceTag .. \" ACK \" .. ConnectedPeer .. \":\".. keyreq .. \":nil\")\n            end\n        else\n            --that message was not for us\n        end\n    end\n    if string.sub(messagereceived,1,9) == \"DATAWRIT:\" then\n        StrSubLoc1 = string.sub(messagereceived,10,string.len(ConnectedPeer)+9)\n        StrSubLoc2 = string.find(messagereceived,\" TO \")\n        PeerID = StrSubLoc1\n        CheckID = string.sub(messagereceived,StrSubLoc2+4,string.len(DeviceTag)+StrSubLoc2+3)\n        if CheckID == DeviceTag and PeerID == ConnectedPeer then\n            local datain = string.sub(messagereceived,StrSubLoc2+5+string.len(DeviceTag),string.len(messagereceived))\n            local keyin = string.sub(datain,1,string.find(datain, \":\")-1)\n            local valin = string.sub(datain,string.find(datain, \":\")+1,string.len(datain))\n            SysData.setStringValue(keyin, valin)\n        else\n            --that message was not for us\n        end\n    end\n    if string.sub(messagereceived,1,8) == \"DATARET:\" then\n        StrSubLoc1 = string.find(messagereceived,\" ACK \")\n        PeerID = string.sub(messagereceived,9,StrSubLoc1 -1)\n        CheckID = string.sub(messagereceived,StrSubLoc1+5,string.len(DeviceTag)+StrSubLoc1+4)\n        local data = string.sub(messagereceived,string.len(DeviceTag)+StrSubLoc1+6,string.len(messagereceived))\n        if CheckID == DeviceTag and PeerID == ConnectedPeer then\n            ScreenOutputAssem = \"DATARET:\" .. data\n        else\n            --that message was not for us\n        end\n    end\n    if string.sub(messagereceived,1,9) == \"KEYVERIF:\" then\n        StrSubLoc1 = string.sub(messagereceived,10,string.len(ConnectedPeer)+9)\n        StrSubLoc2 = string.find(messagereceived,\" TO \")\n        PeerID = StrSubLoc1\n        CheckID = string.sub(messagereceived,StrSubLoc2+4,string.len(DeviceTag)+StrSubLoc2+3)\n        if CheckID == DeviceTag and PeerID == ConnectedPeer then\n            local returnvalue1, returnvalue2, returnvalue3, returnvalue4 = \"\", \"\", \"\", \"\"\n            if SysData.hasKey(\"1\") == 1 then\n                returnvalue1 = SysData.getStringValue(\"1\")\n            end\n            if SysData.hasKey(\"2\") == 1 then\n                returnvalue2 = SysData.getStringValue(\"2\")\n            end\n            if SysData.hasKey(\"3\") == 1 then\n                returnvalue3 = SysData.getStringValue(\"3\")\n            end\n            if SysData.hasKey(\"4\") == 1 then\n                returnvalue4 = SysData.getStringValue(\"4\")\n            end\n            if returnvalue1 == \"12345\" and returnvalue2 == \"12345\" and returnvalue3 == \"12345\" and returnvalue4 == \"12345\" then\n                if External then\n                    External.activate()\n                end\n            end\n        else\n            --that message was not for us\n        end\n    end\n    if string.sub(messagereceived,1,10) == \"TERMINATE:\" then\n        StrSubLoc1 = string.find(messagereceived,\" TO \")\n        PeerID = string.sub(messagereceived,11,StrSubLoc1 -1)\n        CheckID = string.sub(messagereceived,StrSubLoc1+4)\n        if CheckID == DeviceTag and PeerID == ConnectedPeer then\n            --our peer has disconnected, close the connection on our end and die\n            ConnectionSuccessful = 0\n            StateSwitch.deactivate()\n        else\n            --that message was not for us\n        end\n    end    \nend","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"onReceived(channel,message)","slotKey":"2"},"key":"0"},{"code":"local screeninput = Screen.getScriptOutput()\nlocal screenoutput = \"\"\nif screeninput ~= ScreenLastInput then\n    if screeninput == \"SCANLOCAL\" then\n        screenoutput = \"MESSAGE:Scanning local area... \"\n        ActivationEmitter.send(\"1\",\"---\")\n        unit.setTimer('scan', 2)\n    end\n    if string.sub(screeninput,1,8) == \"CONNECT:\" then\n        targetid = string.sub(screeninput,9,string.len(screeninput))\n        screenoutput = \"MESSAGE:Connecting to \" .. targetid\n        ActivationEmitter.send(\"1\",\"---\")\n        SeekTag = targetid\n        unit.setTimer('connect', 1)\n    end\n    if string.sub(screeninput,1,11) == \"CLEARBUFFER\" then\n        screenoutput = \"CLEAR\"\n    end\n    if string.sub(screeninput,1,9) == \"DATAREAD:\" then\n        if ConnectionSuccessful == 1 then\n            local reqkey = string.sub(screeninput,10,string.len(screeninput))\n            screenoutput = \"MESSAGE:Fetching data from \"..ConnectedPeer\n            Emitter.send(\"0\",\"DATAREAD:\"..DeviceTag..\" TO \"..ConnectedPeer..\":\".. reqkey)\n        end\n    end\n    if string.sub(screeninput,1,9) == \"DATAWRIT:\" then\n        if ConnectionSuccessful == 1 then\n            local reqkey = string.sub(screeninput,10,string.len(screeninput))\n            screenoutput = \"MESSAGE:Sending data to \"..ConnectedPeer\n            Emitter.send(\"0\",\"DATAWRIT:\"..DeviceTag..\" TO \"..ConnectedPeer..\":\".. reqkey)\n        end\n    end\n    \n    if string.sub(screeninput,1,8) == \"READKEY:\" then\n        local reqkey = string.sub(screeninput,9,string.len(screeninput))\n        local returndata = SysData.getStringValue(reqkey)\n        screenoutput = \"DATARET:\"..reqkey..\":\"..returndata\n    end\n    if string.sub(screeninput,1,8) == \"SAVEKEY:\" then\n        local reqkey = string.sub(screeninput,9,string.len(screeninput))\n        local saveval = string.sub(reqkey,string.find(reqkey,\":\")+1,string.len(reqkey))\n        reqkey = string.sub(reqkey,0,string.find(reqkey,\":\")-1)\n        SysData.setStringValue(reqkey, saveval)\n        screenoutput = \"MESSAGE:Key saved with values; \"..reqkey..\":\"..saveval\n    end\n    if string.sub(screeninput,1,9) == \"CLEARKEYS\" then\n        SysData.clear()\n        screenoutput = \"MESSAGE:Cleared all existing Databank keys.\"\n    end\n    if string.sub(screeninput,1,10) == \"VERIFYKEYS\" then\n        if ConnectionSuccessful == 1 then\n            screenoutput = \"MESSAGE:Requesting key verification from \"..ConnectedPeer\n            Emitter.send(\"0\",\"KEYVERIF:\"..DeviceTag..\" TO \"..ConnectedPeer)\n        end\n    end\n    if string.sub(screeninput,1,9) == \"TERMINATE\" then\n        if ConnectionSuccessful == 1 then\n            screenoutput = \"MESSAGE:Connection terminated.\"\n            Emitter.send(\"0\",\"TERMINATE:\"..DeviceTag..\" TO \"..ConnectedPeer)\n            ConnectionSuccessful = 0\n            ConnectionAttempts = 0\n        end\n    end\n    --system.print(screeninput)\n    ScreenLastInput = screeninput\nelse\n    --screens output has not changed, only change if some part of the script has updated\n    screenoutput = ScreenOutputAssem\n    if screeninput == \"SCANLOCAL\" then\n        local availconns = \"\"\n        for ac=1,32 do\n            if nearbysystems[ac] ~= nil and nearbysystems[ac] ~= \"\" then\n                availconns = availconns .. nearbysystems[ac] .. \",\"\n            end\n        end\n        screenoutput = \"LOCALCONN:\"..availconns\n    end\nend\nScreen.setScriptInput(screenoutput)\nScreenOutputAssem = \"\"","filter":{"args":[{"value":"screen"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"1"},{"code":"if ConnectionSuccessful == 0 then\n    if ConnectionAttempts < ConnectionRetries then\n        Emitter.send(\"0\",\"CONNECT:\" .. DeviceTag .. \" SEEK \" .. SeekTag)\n        --system.print(\"Requesting connection...\")\n        ConnectionAttempts = ConnectionAttempts + 1\n    else\n        --system.print(\"Request timed out. Aborting...\")\n        unit.stopTimer(\"connect\")\n        StateSwitch.deactivate()\n    end\nelse\n    unit.stopTimer(\"connect\")\nend","filter":{"args":[{"value":"connect"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"2"},{"code":"if ConnectionSuccessful == 0 then\n    StateSwitch.deactivate()\nend","filter":{"args":[{"value":"active"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"3"},{"code":"Emitter.send(\"0\",\"WHOIS:LOCAL:\"..DeviceTag)\nunit.stopTimer(\"scan\")","filter":{"args":[{"value":"scan"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"4"},{"code":"DeviceTag = \"Remote Computer 1\" --export:Tag for the current device.\nSeekTag = \"\" --export:Tag of the default device to seek a connection with.\nActivationTimeout = 10 --export:Number of seconds to wait for a connection after being activated remotely.\nConnectionRetries = 3 --export:Max number of connection attempts.\nConnectionAttempts = 0\nConnectionSuccessful = 0\nWhitelistOnly = 1\n--below this are temporary variables that are overwritten frequently, do not change these values\nRemoteStart = 0\nConnectedPeer = \"\"\nStrSubLoc1 = \"\"\nStrSubLoc2 = \"\"\nCheckID = \"\"\nPeerID = \"\"\nScreenLastInput = \"\"\nSceenUpdate = 0\nScreenOutputAssem = \"\"\nnearbysystems = {}\nfor ix=1,32 do\n    nearbysystems[ix] = \"\"\nend\nif StateSwitch.isActive() == 1 then\n    --we were activated by something on channel 1, stay active for 5 seconds to allow them to attempt a connection\n    unit.setTimer('active', ActivationTimeout)\n    RemoteStart = 1\n    if External then\n        External.deactivate()\n    end\nelse\n    Screen.activate()\n    Screen.setScriptInput(\"ACTIVATED\")\n    system.print(\"Remote Networking System activated. Welcome.\")\n    if External then\n        External.deactivate()\n    end\n    unit.setTimer('screen', 1/60)\n    --ActivationEmitter.send(\"1\",\"---\")\n    --system.print(\"Initializing nearby access points...\")\n    --unit.setTimer('connect', 1)\nend","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"5"},{"code":"if ConnectionSuccessful == 1 then\n    --system.print(\"Terminating Connection with: \"..ConnectedPeer)\n    Emitter.send(\"0\",\"TERMINATE:\"..DeviceTag..\" TO \"..ConnectedPeer)\nend\nScreen.setScriptInput(\"DEACTIVATED\")\nsystem.print(\"Remote Networking System deactivating. Goodbye.\")\nStateSwitch.deactivate()","filter":{"args":[],"signature":"onStop()","slotKey":"-1"},"key":"6"}],"methods":[],"events":[]}